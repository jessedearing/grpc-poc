// Code generated by protoc-gen-go. DO NOT EDIT.
// source: person.proto

package person

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PersonRequest struct {
	// The first name
	FirstName string `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	// The last name
	LastName string `protobuf:"bytes,2,opt,name=lastName" json:"lastName,omitempty"`
	// The email
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	// Is the person an employee?
	IsEmployee           bool     `protobuf:"varint,4,opt,name=isEmployee" json:"isEmployee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonRequest) Reset()         { *m = PersonRequest{} }
func (m *PersonRequest) String() string { return proto.CompactTextString(m) }
func (*PersonRequest) ProtoMessage()    {}
func (*PersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_person_9e6d6f837757da51, []int{0}
}
func (m *PersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonRequest.Unmarshal(m, b)
}
func (m *PersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonRequest.Marshal(b, m, deterministic)
}
func (dst *PersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonRequest.Merge(dst, src)
}
func (m *PersonRequest) XXX_Size() int {
	return xxx_messageInfo_PersonRequest.Size(m)
}
func (m *PersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PersonRequest proto.InternalMessageInfo

func (m *PersonRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *PersonRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *PersonRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PersonRequest) GetIsEmployee() bool {
	if m != nil {
		return m.IsEmployee
	}
	return false
}

type PersonResponse struct {
	// Ack
	Ok                   bool     `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonResponse) Reset()         { *m = PersonResponse{} }
func (m *PersonResponse) String() string { return proto.CompactTextString(m) }
func (*PersonResponse) ProtoMessage()    {}
func (*PersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_person_9e6d6f837757da51, []int{1}
}
func (m *PersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonResponse.Unmarshal(m, b)
}
func (m *PersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonResponse.Marshal(b, m, deterministic)
}
func (dst *PersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonResponse.Merge(dst, src)
}
func (m *PersonResponse) XXX_Size() int {
	return xxx_messageInfo_PersonResponse.Size(m)
}
func (m *PersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PersonResponse proto.InternalMessageInfo

func (m *PersonResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*PersonRequest)(nil), "person.PersonRequest")
	proto.RegisterType((*PersonResponse)(nil), "person.PersonResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonSenderClient is the client API for PersonSender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonSenderClient interface {
	SendPerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonResponse, error)
}

type personSenderClient struct {
	cc *grpc.ClientConn
}

func NewPersonSenderClient(cc *grpc.ClientConn) PersonSenderClient {
	return &personSenderClient{cc}
}

func (c *personSenderClient) SendPerson(ctx context.Context, in *PersonRequest, opts ...grpc.CallOption) (*PersonResponse, error) {
	out := new(PersonResponse)
	err := c.cc.Invoke(ctx, "/person.PersonSender/SendPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonSenderServer is the server API for PersonSender service.
type PersonSenderServer interface {
	SendPerson(context.Context, *PersonRequest) (*PersonResponse, error)
}

func RegisterPersonSenderServer(s *grpc.Server, srv PersonSenderServer) {
	s.RegisterService(&_PersonSender_serviceDesc, srv)
}

func _PersonSender_SendPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonSenderServer).SendPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.PersonSender/SendPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonSenderServer).SendPerson(ctx, req.(*PersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "person.PersonSender",
	HandlerType: (*PersonSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPerson",
			Handler:    _PersonSender_SendPerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "person.proto",
}

func init() { proto.RegisterFile("person.proto", fileDescriptor_person_9e6d6f837757da51) }

var fileDescriptor_person_9e6d6f837757da51 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x2d, 0x2a,
	0xce, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xea, 0xb9, 0x78,
	0x03, 0xc0, 0xac, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x19, 0x2e, 0xce, 0xb4, 0xcc,
	0xa2, 0xe2, 0x12, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84, 0x80,
	0x90, 0x14, 0x17, 0x47, 0x4e, 0x22, 0x54, 0x92, 0x09, 0x2c, 0x09, 0xe7, 0x0b, 0x89, 0x70, 0xb1,
	0xa6, 0xe6, 0x26, 0x66, 0xe6, 0x48, 0x30, 0x83, 0x25, 0x20, 0x1c, 0x21, 0x39, 0x2e, 0xae, 0xcc,
	0x62, 0xd7, 0xdc, 0x82, 0x9c, 0xfc, 0xca, 0xd4, 0x54, 0x09, 0x16, 0x05, 0x46, 0x0d, 0x8e, 0x20,
	0x24, 0x11, 0x25, 0x05, 0x2e, 0x3e, 0x98, 0x03, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xf8,
	0xb8, 0x98, 0xf2, 0xb3, 0xc1, 0x56, 0x73, 0x04, 0x31, 0xe5, 0x67, 0x1b, 0xf9, 0x72, 0xf1, 0x40,
	0x54, 0x04, 0xa7, 0xe6, 0xa5, 0xa4, 0x16, 0x09, 0xd9, 0x72, 0x71, 0x81, 0x58, 0x10, 0x31, 0x21,
	0x51, 0x3d, 0xa8, 0xbf, 0x50, 0xbc, 0x21, 0x25, 0x86, 0x2e, 0x0c, 0x31, 0x5c, 0x89, 0x21, 0x89,
	0x0d, 0x1c, 0x00, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x38, 0x54, 0x47, 0x10, 0x01,
	0x00, 0x00,
}
